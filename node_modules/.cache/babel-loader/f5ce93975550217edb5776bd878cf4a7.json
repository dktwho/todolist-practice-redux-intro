{"ast":null,"code":"var _jsxFileName = \"/home/dktwho/SelfStudy/IT-Kamasutra/DZ/todolist-practice-redux-intro/src/AppWithRedux.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { TodolistWithRedux } from './TodolistWithRedux';\nimport { AddItemForm } from './AddItemForm';\nimport { AppBar, Button, Container, Grid, Paper, Toolbar, Typography } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton/IconButton\";\nimport { Menu } from \"@mui/icons-material\";\nimport { addTodolistAC, changeTodolistFilterAC, changeTodolistTitleAC, removeTodolistAC } from \"./state/todolists-reducer\";\nimport { addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC } from \"./state/tasks-reducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppWithRedux() {\n  _s();\n  let todolists = useSelector(state => state.todolists);\n  let tasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n  function removeTask(id, todolistId) {\n    dispatch(removeTaskAC(id, todolistId));\n  }\n  function addTask(title, todolistId) {\n    dispatch(addTaskAC(title, todolistId));\n  }\n  function changeStatus(taskId, isDone, todolistId) {\n    dispatch(changeTaskStatusAC(taskId, isDone, todolistId));\n  }\n  function changeTaskTitle(taskId, newTitle, todolistId) {\n    dispatch(changeTaskTitleAC(taskId, newTitle, todolistId));\n  }\n  function changeFilter(value, todolistId) {\n    dispatch(changeTodolistFilterAC(todolistId, value));\n  }\n  function removeTodolist(id) {\n    let action = removeTodolistAC(id);\n    dispatch(action);\n  }\n  function changeTodolistTitle(id, title) {\n    dispatch(changeTodolistTitleAC(id, title));\n  }\n  function addTodolist(title) {\n    let action = addTodolistAC(title);\n    dispatch(action);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(AddItemForm, {\n          addItem: addTodolist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: todolists.map(tl => {\n          let allTodolistTasks = tasks[tl.id];\n          let tasksForTodolist = allTodolistTasks;\n          if (tl.filter === \"active\") {\n            tasksForTodolist = allTodolistTasks.filter(t => t.isDone);\n          }\n          if (tl.filter === \"completed\") {\n            tasksForTodolist = allTodolistTasks.filter(t => !t.isDone);\n          }\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              style: {\n                padding: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TodolistWithRedux, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)\n          }, tl.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(AppWithRedux, \"GM8VaHuODFSdqdDHUnyQeEFRwMg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = AppWithRedux;\nexport default AppWithRedux;\nvar _c;\n$RefreshReg$(_c, \"AppWithRedux\");","map":{"version":3,"names":["React","TodolistWithRedux","AddItemForm","AppBar","Button","Container","Grid","Paper","Toolbar","Typography","IconButton","Menu","addTodolistAC","changeTodolistFilterAC","changeTodolistTitleAC","removeTodolistAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC","removeTaskAC","useDispatch","useSelector","AppWithRedux","todolists","state","tasks","dispatch","removeTask","id","todolistId","addTask","title","changeStatus","taskId","isDone","changeTaskTitle","newTitle","changeFilter","value","removeTodolist","action","changeTodolistTitle","addTodolist","padding","map","tl","allTodolistTasks","tasksForTodolist","filter","t"],"sources":["/home/dktwho/SelfStudy/IT-Kamasutra/DZ/todolist-practice-redux-intro/src/AppWithRedux.tsx"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {TaskType, TodolistWithRedux} from './TodolistWithRedux';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, Paper, Toolbar, Typography} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton/IconButton\";\r\nimport {Menu} from \"@mui/icons-material\";\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n} from \"./state/todolists-reducer\";\r\nimport {\r\n    addTaskAC,\r\n    changeTaskStatusAC,\r\n    changeTaskTitleAC,\r\n    removeTaskAC,\r\n\r\n} from \"./state/tasks-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./state/store\";\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\nfunction AppWithRedux() {\r\n\r\n    let todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    let tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function removeTask(id: string, todolistId: string) {\r\n        dispatch(removeTaskAC(id, todolistId))\r\n\r\n    }\r\n\r\n    function addTask(title: string, todolistId: string) {\r\n        dispatch(addTaskAC(title, todolistId))\r\n    }\r\n\r\n    function changeStatus(taskId: string, isDone: boolean, todolistId: string) {\r\n        dispatch(changeTaskStatusAC(taskId, isDone, todolistId))\r\n    }\r\n\r\n    function changeTaskTitle(taskId: string, newTitle: string, todolistId: string) {\r\n        dispatch(changeTaskTitleAC(taskId, newTitle, todolistId))\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType, todolistId: string) {\r\n        dispatch(changeTodolistFilterAC(todolistId, value))\r\n    }\r\n\r\n    function removeTodolist(id: string) {\r\n        let action = removeTodolistAC(id)\r\n        dispatch(action)\r\n    }\r\n\r\n    function changeTodolistTitle(id: string, title: string) {\r\n        dispatch(changeTodolistTitleAC(id, title))\r\n    }\r\n\r\n    function addTodolist(title: string) {\r\n        let action = addTodolistAC(title)\r\n        dispatch(action)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n                            let tasksForTodolist = allTodolistTasks;\r\n\r\n                            if (tl.filter === \"active\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone);\r\n                            }\r\n                            if (tl.filter === \"completed\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => !t.isDone);\r\n                            }\r\n\r\n                            return <Grid key={tl.id} item>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <TodolistWithRedux\r\n                                       \r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppWithRedux;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}